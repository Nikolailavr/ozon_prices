services:

  pg:
    image: postgres
    environment:
      POSTGRES_DB: ozonprices
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"

  adminer:
    image: adminer
    ports:
      - "8080:8080"

  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"

#services:
#  app:
#    build:
#      dockerfile: ./docker-build/app/Dockerfile
#      context: ./
#    environment:
#      APP_CONFIG__DB__URL: postgresql+asyncpg://user:password@pg:5432/shop
#      APP_CONFIG__DB__ECHO: 0
#    ports:
#      - "8000:8000"
#    depends_on:
#      pg:
#        condition: service_healthy
##    command:
##      - python
##      - run_main.py
#    develop:
#      watch:
#        - action: sync+restart
#          path: ./fastapi-application
#          target: /app
#        - action: rebuild
#          path: ./poetry.lock
#
#  pg:
#    image: postgres:16.4
#    environment:
#      POSTGRES_DB: shop
#      POSTGRES_USER: user
#      POSTGRES_PASSWORD: password
#      PGDATA: /var/lib/postgresql/data
##    ports:
##      - "5432:5432"
#    volumes:
#      - pgdata:/var/lib/postgresql/data
#    healthcheck:
#      test: [ "CMD-SHELL", "pg_isready" ]
#      interval: 5s
#      timeout: 3s
#      retries: 3
#
#  pgadmin:
#    image: dpage/pgadmin4
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.org
#      PGADMIN_DEFAULT_PASSWORD: admin
#      PGADMIN_CONFIG_SERVER_MODE: 'False'
#    ports:
#      - "5050:80"
#    depends_on:
#      pg:
#        condition: service_healthy
#
#volumes:
#  pgdata: