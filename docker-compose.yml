services:
  app:
    build:
      dockerfile: ./docker-build/app/Dockerfile
      context: ./
    environment:
      APP_CONFIG__DB__ECHO: 0
    ports:
      - "8004:8000"
    depends_on:
      pg:
        condition: service_healthy
    develop:
      watch:
        - action: sync+restart
          path: ./src
          target: /app
        - action: rebuild
          path: ./poetry.lock

  pg:
    image: postgres:16.9
    environment:
      POSTGRES_DB: ${APP_CONFIG__DB__NAME}
      POSTGRES_USER: ${APP_CONFIG__DB__USER}
      POSTGRES_PASSWORD: ${APP_CONFIG__DB__PASSWORD}
      PGDATA: /var/lib/postgresql/data
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 3s
      retries: 3
    restart: unless-stopped

  celery-1:
    build:
      context: ./
      dockerfile: ./docker-build/app/Dockerfile
    command: celery -A app.celery.celery_app worker --pool=threads --loglevel=info -c 1
    volumes:
      - .:/app
      - shared-data:/app/shared
    working_dir:
      /app
    environment:
      - PYTHONPATH=/app/src
    depends_on:
      - redis
    restart: unless-stopped

  flower:
      build:
        context: .
        dockerfile: ./docker-build/app/Dockerfile_base
      command: celery -A app.celery.celery_app flower --port=5555 \
        --basic_auth=${APP_CONFIG__FLOWER__USER}:${APP_CONFIG__FLOWER__PASSWORD}
      volumes:
        - .:/app
      working_dir: /app
      environment:
        PYTHONPATH: /app/src
      ports:
        - "5555:5555"
      depends_on:
        - redis
        - celery-1
      restart: unless-stopped

  redis:
    image: redis:8
    container_name: redis
    command: ["redis-server", "--requirepass", "${APP_CONFIG__REDIS__PASSWORD}"]
    restart: unless-stopped
    ports:
      - "6379:6379"
      -
volumes:
  pgdata: